version: '3'

services:
  especificacion_imagen:
    image: swaggerapi/swagger-ui
    container_name: especificacion_imagen
    environment:
        SWAGGER_JSON: /api/swagger.yaml
    volumes:
        - ./Especificacion_OpenAPI:/api:ro
    ports:
      - 8080

  reverse-proxy: # NGINX
    image: nginx:1.21.1 # image with S.O
    container_name: reverse-proxy-container 
    volumes: # association of config file from the host to the container
      - ./nginx/nginx-conf.conf:/etc/nginx/nginx.conf 
    depends_on:
      - especificacion_imagen
      - api-rest
      - mysql-db
      - phpmyadmin
    ports:
      - 80:80 #Host:Container (Check nginx-conf.confg; container port is the same as what NGINX is listening to)
  # proxy:
  #   image: caddy:latest
  #   container_name: vehicles_proxy
  #   volumes:
  #       - ./Caddyfile:/etc/caddy/Caddyfile
  #       - ./caddy_data:/data
  #   ports:
  #       - "80:80"
  #   depends_on:
  #       - especificacion_image
  #       - api-rest
  api-rest:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api-rest
    depends_on:
      - mysql-db
      - especificacion_imagen
    volumes:
      - ./api:/api
  mysql-db: 
    image: mysql
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: trabajos
    volumes:
      - ./misDatos:/var/lib/mysql
    ports:
      - 6000:3306
  phpmyadmin:
    image: phpmyadmin
    container_name: interfaz-db
    restart: always
    ports:
      - 7000:80
    # links:
    #   - "mysql-db:phpmyadmin"

